server {
    # Listen on port 80 for incoming HTTP connections.
    listen 80;

    # Hide the Nginx version from error pages and headers for security.
    server_tokens off;

    # Set the root directory where Nginx will look for static files.
    # This path matches where your built React app is copied in the Dockerfile.
    root /usr/share/nginx/html;

    # Specify the default file to serve when a directory is requested.
    index index.html;

    # This block handles all requests.
    # It's crucial for Single Page Applications (SPAs) like React.
    location / {
        # Try to serve the requested URI directly (e.g., /styles.css, /main.js).
        # If the URI is a directory, try to serve index.html within that directory.
        # If neither of the above works, it falls back to serving /index.html.
        # This allows client-side routers (like React Router) to handle routing
        # for paths that don't correspond to actual files on the server.
        try_files $uri $uri/ /index.html;
    }

    # Optional: Configuration for serving specific error pages.
    # This example defines a custom page for 5xx errors.
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # Optional: Enable Gzip compression for better performance.
    # This compresses responses before sending them to the client, reducing load times.
    gzip on;
    gzip_vary on; # Add 'Vary: Accept-Encoding' header
    gzip_proxied any; # Enable compression for all proxied requests
    gzip_comp_level 6; # Compression level (1-9, 6 is a good balance)
    gzip_buffers 16 8k; # Number and size of buffers for compression
    gzip_http_version 1.1; # Minimum HTTP version for compression
    # Specify the MIME types that should be gzipped.
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
}